<?php
return [
    'place_new_order' => 'Place new order',
    'placeOrder' => 'Place order',
    'order_details' => 'Order details',
    'order_items' => 'Order items',
    'order_activites' => 'Order activites',
    'addItemUnavailable' => 'This product is set as unavailable, but you can still add it to the order.',
    //type
    'orderType' => 'Order type',
    'pickup' => 'Pickup order',
    'delivery' => 'Home delivery',
    'dineIn' => 'Dine-in',
    'type_0' => 'Home delivery',
    'type_1' => 'Pickup order',
    'type_2' => 'Dine-in',
    //status
    'all' => 'All',
    'pending' => 'Pending',
    'accepted' => 'Accepted',
    'out_for_delivery' => 'Out for delivery',
    'out_for_delivery_with' => 'With :delivery:',
    'ready_for_pickup' => 'Ready for pickup',
    'diningIn' => 'Dining in',
    'delivered' => 'Delivered',
    'pickedUp' => 'Picked up',
    'dinedIn' => 'Dined-in',
    'canceled' => 'Canceled',
    //payment method
    'paymentMethod' => 'Payment method',
    'cash_on_delivery' => 'Cash on delivery',
    'card_on_delivery' => 'Card on delivery',
    'cash_at_restaurant' => 'Cash at the restaurant',
    'card_at_restaurant' => 'Payment card at the restaurant',
    //order by
    'placeOrderFor' => 'Place order for',
    'phoneNumber' => 'Phone number',
    //new
    'address' => 'Full address',
    'select_address' => 'Select address',
    'user_has_no_addresses' => 'The selected user has no address saved!',
    //
    'addLocation' => 'Add location',
    'removeLocation' => 'Remove location',
    ///
    'orderComment' => 'Additional comment',
    //items
    'addItem' => 'Add item',
    'addOrderItem' => 'Add order item',
    'findProduct' => 'Find product',
    'qty' => 'Quantity',
    'qtyS' => 'Qty',
    'specialRequest' => 'Special request',
    'addSpecialRequest' => 'Add a special request',
    //receipt
    'subTotal' => 'Subtotal',
    'discount' => 'Discount',
    'tax' => 'Tax',
    'service' => 'Service',
    'deliveryCost' => 'Delivery fees',
    'total' => 'Total',
    'happyHourNotice' => 'Happy hour is available now for :service: with :discount:% discount.',
    'applyDiscount' => 'Apply discount',
    //place order validation
    'placeOrderErrorSelectUser' => 'Please select a user.',
    'placeOrderErrorPhoneNumberRequired' => 'Please enter the phone number.',
    'placeOrderErrorAddressRequired' => 'Please enter the delivery address.',
    'placeOrderErrorNoItems' => 'Failed to place the order. You haven\'t added any items to the order.',
    //order table
    'type' => 'Type',
    'customer' => 'Customer',
    'status' => 'Status',
    'items' => 'Items',
    'price' => 'Price',
    'order' => 'Order',
    'placed' => 'Placed',
    'viewOrder' => 'View order',
    'manageOrder' => 'Manage order',
    'printReceipt' => 'Print receipt',
    //dates
    'orderPlaced' => 'Placed',
    'orderDineIn' => 'Dined in',
    'orderDiningIn' => 'Dining in',
    'orderAccepted' => 'Accepted',
    'orderDelivered' => 'Delivered',
    'orderPickedup' => 'Picked up',
    'orderWithDelivery' => 'Out for delivery',
    'orderreadyForPickup' => 'Ready for pickup',
    'orderCanceled' => 'Canceled',
    //order actions
    'acceptOrder' => 'Accept order',
    'cancelOrder' => 'Cancel order',
    'markAsreadyForPickup' => 'Mark as ready for pickup',
    'markAsPickedUp' => 'Mark as picked up',
    'markAsOutForDelivery' => 'Mark as out for delivery',
    'markAsDelivered' => 'Mark as delivered',
    'giveToDelivery' => 'Assign to delivery person',
    'giveOrderToDelivery' => 'Assign order to delivery person',
    'orderNumber' => 'Order number',
    'giveOrder' => 'Assign order',
    'noDeliveryAccounts' => 'You haven\'t created any delivery account yet. <a class="popupPage" popupPage="create_delivery_account">Create new delivery account.</a>',
    'markAsDiningin' => 'Mark as dining in',
    'markAsDinedin' => 'Mark as dined in',
    //history filters
    'orderStatus' => 'Order Status',
    'placedFor' => 'Placed for',
    'moreFilters' => 'More filters',
    'lessFilters' => 'Less filters',
    'findOrders' => 'Find orders',
    'noOrders' => 'No orders found.',
    //order page
    'orderHashNumber' => 'Order #:order:',
    'orderInfo' => 'Order information',
    'lastModified' => 'Last modified by :account:',
    'itemsLastModified' => 'Items last modified by :account:',
    'collectReviewsSeen' => 'Post-purchase survey',
    'seen' => 'Seen',
    'unSeen' => 'Unseen',
    'addedByAcount' => 'Added by :account:',
    'addByScheduledDiscounts' => 'Added by a happy hour',
    'addByPromocode' => 'Added by the promo code :code:',
    'originalItems' => 'Original order items',
    'orderReceipt' => 'Order receipt',
    'cantRemoveLastItem' => 'This item cannot be removed; the order must have at least one item.',
    "orderNotFound" => "Order not found!",
    ///activites
    "seeChanges" => "See changes",
    "from" => "From",
    "to" => "To",
    'order.new_order_by_user' => "Placed by :user:.",
    "order.canceled_by_user" => "Canceled by :user:.",
    "order.new_order_by_account" => "Placed by :account:.",
    "order.accepted" => "Accepted by :account:.",
    "order.canceled_by_account" => "Canceled by :account:.",
    "order.ready_for_pickup" => "Marked as ready for pickup by :account:.",
    "order.picked_up" => "Marked as picked up by :account:.",
    "order.out_for_delivery" => "Marked as out for delivery by :account:.",
    "order.to_delivery_man" => "Marked as out for delivery and assigned to :delivery: by :account:.",
    "order.delivered_by_account" => "Marked as delivered by :account:.",
    "order.delivered_by_delivery" => "Marked as delivered by :delivery:.",
    "order.diningin" => "Marked as dining in by :account:.",
    "order.dinedin" => "Marked as dined in by :account:.",
    "order.update.notice" => "Additional comment changed by :account:.",
    "order.update.phoneNumber" => "Phone number changed from :old_phone: to :new_phone: by :account:.",
    "order.update.address" => "Address changed by :account:.",
    "order.update.type" => "Order type changed from :old_type: to :new_type: by :account:.",
    "order.update.discount" => "Discount changed from :old_discount: to :new_discount: by :account:.",
    "order.update.deliveryCost" => "Delivery fees changed from :old_DeliveryCost: to :new_deliveryCost: by :account:.",
    "order.update.addItem" => ":qty: :product: added to the order by :account:.",
    "order.update.removeItem" => ":product: removed from the order by :account:.",
    "order.update.itemNotice" => ":product:'s special request has been changed by :account:.",
    "order.update.qty" => ":product:'s quantity changed from :old_qty: to :new_qty: by :account:.",
    "order.update.selection" => ":product:'s variant :option: has been changed from :old_selection: to :new_selection:."
];
